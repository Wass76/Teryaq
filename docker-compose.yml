version: '3.8'
# You can just enable docker for psql database, Or run whole project on docker container

# Database service
services:
  teryaq-db:
    image: postgres:latest
    container_name: teryaq-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: teryaq
      PGDATA: /var/lib/postgresql/data # Internal path where Postgres stores data
    ports:
      - "15432:5432" # Maps container port 5432 to host port 15432 (optional for direct access)
    networks:
      - teryaq-net
    restart: unless-stopped
    # Resource limits to prevent CPU thrashing and memory issues
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    volumes:
      # Named Volume for Persistent Database Data (CRUCIAL FOR DATA PERSISTENCE & RESTORATION)
      - teryaq_pg_data:/var/lib/postgresql/data # Maps internal PGDATA to a named Docker volume
    healthcheck: # IMPORTANT: This ensures the DB is truly ready before apps connect
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Give the DB some initial time to come up

  # application service
  teryaq-app:
    build: . # Builds the Docker image from the Dockerfile in the current directory
    image: teryaq-app # Name for your built Docker image
    depends_on:
      # teryaq-app will start ONLY AFTER teryaq-db is healthy
      teryaq-db:
        condition: service_healthy
    container_name: teryaq-backend
    ports:
      - "13000:3000" # Maps container port 3000 to host port 13000
    environment:
      # Database connection details, using the Docker Compose service name 'teryaq-db' as the hostname
      SPRING_DATASOURCE_URL: jdbc:postgresql://teryaq-db:5432/teryaq
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DATABASE: teryaq
      # Ensure Flyway is enabled (though usually auto-detected)
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: "classpath:/db/migration"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      # JVM memory settings to prevent memory leaks
      JAVA_OPTS: "-Xmx768m -Xms256m"
    networks:
      - teryaq-net # Connects to the shared network
    restart: unless-stopped
    # Resource limits to prevent CPU thrashing and memory issues
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M

networks:
  teryaq-net:
    driver: bridge

# Define the named volume for data persistence
volumes:
  teryaq_pg_data: # This is the named volume that Docker manages on your host